from aiogram import Router, F
from aiogram.types import Message, CallbackQuery, ContentType, LabeledPrice, PreCheckoutQuery
from aiogram.fsm.context import FSMContext

from keyboards import user_kbs
from states.user_states import UserState
from database.services.user_service import UserService
from middleware.db_di import DatabaseDI


router = Router()
router.message.middleware(DatabaseDI())

@router.callback_query(F.data == 'deposit')
async def deposit(callback: CallbackQuery, state: FSMContext):
    await callback.answer()
    
    await callback.message.answer('<b>–ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è —á–µ—Ä–µ–∑ Telegram Stars, –≤–≤–µ–¥–∏—Ç–µ –Ω–∏–∂–µ —Å—É–º–º—É –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞.\n<blockquote>1 ‚≠êÔ∏è - 150 —Å–∏–º–≤–æ–ª–æ–≤</blockquote></b>',
                                        reply_markup=user_kbs.back_kb)
    await state.set_state(UserState.deposit)


@router.message(UserState.deposit)
async def send_check(message: Message, state: FSMContext):
    if message.content_type != ContentType.TEXT or not message.text.isdigit() or int(message.text) > 999999:
        await message.answer('<b>–ù–µ–≤–µ—Ä–Ω–∞—è —Å—É–º–º–∞ –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑</b>',
                                reply_markup=user_kbs.back_kb)
        return

    await message.answer_invoice(
        '–ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ ‚≠êÔ∏è',
        '–ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ –¥–ª—è –æ–∑–≤—É—á–∫–∏ —Ç–µ–∫—Å—Ç–∞',
        'stars',
        'XTR',
        [LabeledPrice(label='XTR', amount=int(message.text))],
    )
    await state.clear()


@router.pre_checkout_query()
async def checkout_handler(pre_checkout_query: PreCheckoutQuery):
    await pre_checkout_query.answer(ok=True)


@router.message(F.successful_payment)
async def star_payment(message: Message, user_service: UserService):
    await user_service.update_balance(message.from_user.id, message.successful_payment.total_amount)
    print(message.successful_payment.total_amount)
    await message.answer(text='<b>–ë–∞–ª–∞–Ω—Å —É—Å–ø–µ—à–Ω–æ –ø–æ–ø–æ–ª–Ω–µ–Ω!ü§ó</b>')
